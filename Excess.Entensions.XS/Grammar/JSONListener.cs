//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from JSON.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Excess.Extensions.XS.Grammars {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="JSONParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
public interface IJSONListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.json"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJson([NotNull] JSONParser.JsonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.json"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJson([NotNull] JSONParser.JsonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObject([NotNull] JSONParser.ObjectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObject([NotNull] JSONParser.ObjectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.pair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPair([NotNull] JSONParser.PairContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.pair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPair([NotNull] JSONParser.PairContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray([NotNull] JSONParser.ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray([NotNull] JSONParser.ArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] JSONParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] JSONParser.ValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] JSONParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] JSONParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Identifier</c>
	/// labeled alternative in <see cref="JSONParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] JSONParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Identifier</c>
	/// labeled alternative in <see cref="JSONParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] JSONParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Constant</c>
	/// labeled alternative in <see cref="JSONParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] JSONParser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Constant</c>
	/// labeled alternative in <see cref="JSONParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] JSONParser.ConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StringLiteral</c>
	/// labeled alternative in <see cref="JSONParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringLiteral([NotNull] JSONParser.StringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StringLiteral</c>
	/// labeled alternative in <see cref="JSONParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringLiteral([NotNull] JSONParser.StringLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Parenthesized</c>
	/// labeled alternative in <see cref="JSONParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesized([NotNull] JSONParser.ParenthesizedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Parenthesized</c>
	/// labeled alternative in <see cref="JSONParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesized([NotNull] JSONParser.ParenthesizedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Index</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex([NotNull] JSONParser.IndexContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Index</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex([NotNull] JSONParser.IndexContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PostfixDecrement</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfixDecrement([NotNull] JSONParser.PostfixDecrementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PostfixDecrement</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfixDecrement([NotNull] JSONParser.PostfixDecrementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MemberAccess</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberAccess([NotNull] JSONParser.MemberAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MemberAccess</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberAccess([NotNull] JSONParser.MemberAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MemberPointerAccess</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberPointerAccess([NotNull] JSONParser.MemberPointerAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MemberPointerAccess</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberPointerAccess([NotNull] JSONParser.MemberPointerAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PostfixIncrement</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfixIncrement([NotNull] JSONParser.PostfixIncrementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PostfixIncrement</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfixIncrement([NotNull] JSONParser.PostfixIncrementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Call</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall([NotNull] JSONParser.CallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Call</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall([NotNull] JSONParser.CallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SimpleExpression</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExpression([NotNull] JSONParser.SimpleExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SimpleExpression</c>
	/// labeled alternative in <see cref="JSONParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExpression([NotNull] JSONParser.SimpleExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.argumentExpressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentExpressionList([NotNull] JSONParser.ArgumentExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.argumentExpressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentExpressionList([NotNull] JSONParser.ArgumentExpressionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpression([NotNull] JSONParser.UnaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpression([NotNull] JSONParser.UnaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.unaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryOperator([NotNull] JSONParser.UnaryOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.unaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryOperator([NotNull] JSONParser.UnaryOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.castExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastExpression([NotNull] JSONParser.CastExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.castExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastExpression([NotNull] JSONParser.CastExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpression([NotNull] JSONParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpression([NotNull] JSONParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpression([NotNull] JSONParser.AdditiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpression([NotNull] JSONParser.AdditiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.shiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftExpression([NotNull] JSONParser.ShiftExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.shiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftExpression([NotNull] JSONParser.ShiftExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpression([NotNull] JSONParser.RelationalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpression([NotNull] JSONParser.RelationalExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpression([NotNull] JSONParser.EqualityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpression([NotNull] JSONParser.EqualityExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpression([NotNull] JSONParser.AndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpression([NotNull] JSONParser.AndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.exclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusiveOrExpression([NotNull] JSONParser.ExclusiveOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.exclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusiveOrExpression([NotNull] JSONParser.ExclusiveOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.inclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInclusiveOrExpression([NotNull] JSONParser.InclusiveOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.inclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInclusiveOrExpression([NotNull] JSONParser.InclusiveOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.logicalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalAndExpression([NotNull] JSONParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.logicalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalAndExpression([NotNull] JSONParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.logicalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalOrExpression([NotNull] JSONParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.logicalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalOrExpression([NotNull] JSONParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalExpression([NotNull] JSONParser.ConditionalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalExpression([NotNull] JSONParser.ConditionalExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExpression([NotNull] JSONParser.AssignmentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExpression([NotNull] JSONParser.AssignmentExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentOperator([NotNull] JSONParser.AssignmentOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentOperator([NotNull] JSONParser.AssignmentOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JSONParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantExpression([NotNull] JSONParser.ConstantExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JSONParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantExpression([NotNull] JSONParser.ConstantExpressionContext context);
}
} // namespace Excess.Extensions.XS.Grammars
